<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, maximum-scale=1.0" />
  <title>Kiafanny Lanches</title>
  <link rel="stylesheet" href="assets/css/style.css" />
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
</head>
<body>

  <div class="fundo-estatico">
    <div class="overlay">
      <header>
        <img src="assets/images/logo.png" alt="Kiafanny Lanches" class="logo-kiafanny" />
        <p class="subtitulo">O melhor lanche da região</p>
      </header>

      <div class="tela-escolha">
        <h2 class="titulo-escolha">ESCOLHA SUA CIDADE</h2>
        <div class="layout-mascote-botoes">
          <img src="assets/images/mascote.gif" alt="Mascote Kiafanny" class="mascote-apontando" />

          <div class="botoes-coluna direita">
            <a href="?cidade=canapi">
              <img src="assets/images/canapi.png" alt="Canapi" class="botao-img">
            </a>
            <a href="?cidade=inhapi">
              <img src="assets/images/inhapi.png" alt="Inhapi" class="botao-img">
            </a>
            <a href="?cidade=mata-grande">
              <img src="assets/images/mata-grande.png" alt="Mata Grande" class="botao-img">
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div id="cardapio" class="cardapio" style="display: none;">
    </div>

  <div id="carrinho-flutuante" style="display: none;">
    <button id="finalizar-pedido">
      Finalizar Pedido (<span id="contador">0</span>)
    </button>
  </div>

  <div id="modal-item" class="modal">
    <div class="modal-conteudo">
      <img id="modal-img" src="" alt="Lanche">
      <h3 id="modal-nome"></h3>
      <p id="modal-descricao"></p>
      <div class="quantidade-control">
        <button id="diminuir-qtd">-</button>
        <span id="quantidade-item">1</span>
        <button id="aumentar-qtd">+</button>
      </div>
      <p>Preço: <span id="modal-preco"></span></p>
      <button id="adicionar-modal">Adicionar ao Carrinho</button>
    </div>
  </div>

  <div id="modal-resumo" class="modal">
    <div class="modal-resumo-conteudo">
      <h2>Seu Pedido</h2>
      <ul id="lista-pedido">
        </ul>
      <p class="resumo-total">Total: <span id="resumo-total-valor">R$ 0,00</span></p>
      <button id="enviar-whatsapp">Enviar Pedido para WhatsApp</button>
    </div>
  </div>

  <script>
    // Seus scripts JavaScript aqui, sem mudanças.
    // Garanta que esta parte do script esteja correta e completa.
    let carrinho = [];
    const contadorSpan = document.getElementById('contador');

    document.addEventListener('DOMContentLoaded', function() {
      const urlParams = new URLSearchParams(window.location.search);
      const cidade = urlParams.get('cidade');
      const cardapioElement = document.getElementById('cardapio');
      const carrinhoFlutuante = document.getElementById('carrinho-flutuante');

      if (cidade) {
        document.querySelector('.fundo-estatico').style.display = "none";
        cardapioElement.style.display = "grid";
        carrinhoFlutuante.style.display = "block"; // Mostra o botão do carrinho

        // Seu array de lanches (mantido como está, apenas um exemplo)
        const lanches = [
          ["Hambúrguer", "12,00", "pão, hambúrguer, queijo, presunto e salada", "assets/images/hamburguer.png"],
          ["Americano", "12,00", "pão, queijo, presunto, ovo, salada, maionese e ketchup", "assets/images/americano.png"],
          ["X-Burguer", "15,00", "pão, hambúrguer, queijo, ovo, presunto e salada", "assets/images/xburguer.png"],
          ["X-Calabresa", "20,00", "pão, hambúrguer, queijo, calabresa, presunto e salada", "assets/images/xcalabresa.png"],
          ["X-Frango", "20,00", "pão, frango desfiado, queijo, presunto e salada", "assets/images/xfrango.png"],
          ["X-Filé de Frango", "20,00", "pão, filé de frango, queijo, ovo, presunto, salada, maionese e ketchup", "assets/images/xfilefrango.png"],
          ["X-Bacon", "25,00", "pão, hambúrguer, bacon, queijo, presunto e salada", "assets/images/xbacon.png"],
          ["Hambúrguer Artesanal", "25,00", "pão, hambúrguer artesanal, cebola, cheddar, mussarela, presunto, ovo", "assets/images/hamburguer_artesanal.png"],
          ["Pizza Lanche", "30,00", "pão, carne, molho de tomate, mussarela, presunto, milho, ervilha", "assets/images/pizza_lanche.png"],
          ["Pão com carne do sol", "12,00", "pão, carne do sol, queijo, tomate e cebola", "assets/images/paocarnedelsol.png"],
          ["Pão de carne de porco", "12,00", "pão, carne de porco desfiada, queijo, tomate e cebola", "assets/images/paocarneporco.png"],
          ["Cachorro Quente", "8,00", "pão, salsicha, batata palha, molho", "assets/images/cachorroquente.png"],
          ["Refrigerante Lata", "6,00", "Coca-Cola, Guaraná, Fanta", "assets/images/refri.png"],
          ["Água Mineral", "4,00", "Água sem gás", "assets/images/agua.png"]
        ];


        lanches.forEach(lanche => {
          const itemDiv = document.createElement('div');
          itemDiv.classList.add('item');
          itemDiv.dataset.nome = lanche[0];
          itemDiv.dataset.preco = lanche[1];
          itemDiv.dataset.descricao = lanche[2];
          itemDiv.dataset.imagem = lanche[3];

          itemDiv.innerHTML = `
            <img src="${lanche[3]}" alt="${lanche[0]}">
            <h3>${lanche[0]}</h3>
            <p>${lanche[2]}</p>
            <span class="price">R$ ${lanche[1]}</span>
          `;
          cardapioElement.appendChild(itemDiv);
        });

        const modalItem = document.getElementById('modal-item');
        const modalImg = document.getElementById('modal-img');
        const modalNome = document.getElementById('modal-nome');
        const modalDescricao = document.getElementById('modal-descricao');
        const modalPreco = document.getElementById('modal-preco');
        const quantidadeItemSpan = document.getElementById('quantidade-item');
        const diminuirQtdBtn = document.getElementById('diminuir-qtd');
        const aumentarQtdBtn = document.getElementById('aumentar-qtd');
        const adicionarModalBtn = document.getElementById('adicionar-modal');

        let currentItem = {}; // Objeto para armazenar os detalhes do item selecionado

        cardapioElement.addEventListener('click', e => {
          const itemDiv = e.target.closest('.item');
          if (itemDiv) {
            currentItem = {
              nome: itemDiv.dataset.nome,
              preco: itemDiv.dataset.preco,
              descricao: itemDiv.dataset.descricao,
              imagem: itemDiv.dataset.imagem,
              quantidade: 1
            };
            modalImg.src = currentItem.imagem;
            modalNome.textContent = currentItem.nome;
            modalDescricao.textContent = currentItem.descricao;
            modalPreco.textContent = `R$ ${currentItem.preco}`;
            quantidadeItemSpan.textContent = currentItem.quantidade;
            modalItem.style.display = 'flex';
          }
        });

        diminuirQtdBtn.addEventListener('click', () => {
          if (currentItem.quantidade > 1) {
            currentItem.quantidade--;
            quantidadeItemSpan.textContent = currentItem.quantidade;
          }
        });

        aumentarQtdBtn.addEventListener('click', () => {
          currentItem.quantidade++;
          quantidadeItemSpan.textContent = currentItem.quantidade;
        });

        adicionarModalBtn.addEventListener('click', () => {
          for (let i = 0; i < currentItem.quantidade; i++) {
            carrinho.push({ nome: currentItem.nome, preco: currentItem.preco });
          }
          contadorSpan.textContent = carrinho.length;
          modalItem.style.display = 'none';
        });

        // Fechar modal ao clicar fora
        modalItem.addEventListener('click', e => {
          if (e.target.id === 'modal-item') {
            modalItem.style.display = 'none';
          }
        });

        // Lógica do modal de resumo do pedido
        const modalResumo = document.getElementById('modal-resumo');
        const listaPedido = document.getElementById('lista-pedido');
        const resumoTotalValor = document.getElementById('resumo-total-valor');
        const enviarWhatsappBtn = document.getElementById('enviar-whatsapp');

        document.getElementById('finalizar-pedido').addEventListener('click', () => {
          if (carrinho.length === 0) {
            alert("Seu pedido está vazio.");
            return;
          }
          atualizarResumo();
          modalResumo.style.display = 'flex';
        });

        function atualizarResumo() {
          listaPedido.innerHTML = '';
          let total = 0;
          const agrupado = {};

          carrinho.forEach(item => {
            if (!agrupado[item.nome]) {
              agrupado[item.nome] = { ...item, qtd: 0 };
            }
            agrupado[item.nome].qtd++;
          });

          Object.values(agrupado).forEach(item => {
            const li = document.createElement('li');
            li.classList.add('resumo-item');
            const itemTotal = parseFloat(item.preco.replace(",", ".")) * item.qtd;
            total += itemTotal;
            li.innerHTML = `
              <span>${item.nome} x${item.qtd}</span>
              <div class="resumo-controles">
                <button onclick="diminuirQtdCarrinho('${item.nome}')">-</button>
                <span>R$ ${itemTotal.toFixed(2).replace(".", ",")}</span>
                <button onclick="aumentarQtdCarrinho('${item.nome}')">+</button>
                <button onclick="removerItemCarrinho('${item.nome}')" style="background-color: #dc3545; color: white;">X</button>
              </div>
            `;
            listaPedido.appendChild(li);
          });
          resumoTotalValor.textContent = `R$ ${total.toFixed(2).replace(".", ",")}`;
        }

        function aumentarQtdCarrinho(nome) {
          const itemIndex = carrinho.findIndex(item => item.nome === nome);
          if (itemIndex !== -1) {
            carrinho.push({ nome: carrinho[itemIndex].nome, preco: carrinho[itemIndex].preco });
            contadorSpan.textContent = carrinho.length;
            atualizarResumo();
          }
        }

        function diminuirQtdCarrinho(nome) {
          const itemIndex = carrinho.findIndex(item => item.nome === nome);
          if (itemIndex !== -1) {
            carrinho.splice(itemIndex, 1);
            contadorSpan.textContent = carrinho.length;
            atualizarResumo();
          }
        }

        function removerItemCarrinho(nome) {
          carrinho = carrinho.filter(item => item.nome !== nome);
          contadorSpan.textContent = carrinho.length;
          atualizarResumo();
        }

        modalResumo.addEventListener('click', e => {
          if (e.target.id === 'modal-resumo') {
            modalResumo.style.display = 'none';
          }
        });

        enviarWhatsappBtn.addEventListener('click', () => {
          if (carrinho.length === 0) return alert("Seu pedido está vazio.");
          let texto = "Olá! Quero fazer meu pedido:%0A";
          let total = 0;
          const agrupado = {};
          carrinho.forEach(item => {
            if (!agrupado[item.nome]) agrupado[item.nome] = { ...item, qtd: 0 };
            agrupado[item.nome].qtd++;
          });

          Object.values(agrupado).forEach(item => {
            texto += `- ${item.nome} x${item.qtd} (R$ ${parseFloat(item.preco.replace(",", ".")).toFixed(2).replace(".", ",")})%0A`;
            total += parseFloat(item.preco.replace(",", ".")) * item.qtd;
          });

          texto += `%0ATotal: R$ ${total.toFixed(2).replace(".", ",")}`;

          let numero = '';
          if (cidade === 'canapi') numero = '5582982062539';
          if (cidade === 'inhapi') numero = '5582981075609';
          if (cidade === 'mata-grande') numero = '5582981404413';

          if (numero) {
            window.open(`https://wa.me/${numero}?text=${texto}`, '_blank');
          } else {
            alert("Número de telefone não configurado para esta cidade.");
          }
        });

      } else {
        // Se nenhuma cidade for selecionada, o fundo estático e a tela de escolha permanecem visíveis
      }
    });
  </script>

</body>
</html>
